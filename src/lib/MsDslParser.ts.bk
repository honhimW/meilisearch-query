import {
	ATN,
	ATNDeserializer, DFA, FailedPredicateException,
	RecognitionException, NoViableAltException, BailErrorStrategy,
	Parser, ParserATNSimulator,
	RuleContext, ParserRuleContext, PredictionMode, PredictionContextCache,
	TerminalNode, RuleNode,
	Token,
	Interval, IntervalSet
} from 'antlr4';

import MsDslListener from "./MsDslListener";
// for running tests with parameters, TODO: discuss strategy for typed parameters in CI
// eslint-disable-next-line no-unused-vars
type int = number;

export declare class DecisionState {
	atn: ATN;
	stateNumber: number;
	decision: number;
	nonGreedy: boolean;
}

export declare class TokenStream {

	index: number;
	size: number;

	LA(i: number): number;
	LT(k: number): Token;
	getText(interval?: Interval): string;
	// channelIndex can be retrieved using: lexer.channelNames().findIndex(channelName)
	getHiddenTokensToLeft(tokenIndex: number, channelIndex?: number): Token[];
	getHiddenTokensToRight(tokenIndex: number, channelIndex?: number): Token[];
	get(idx: number): Token;
}